/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import es.weso.shex.parser.ShExDocParser;
import es.weso.shex.parser.ShExDocLexer;

import org.antlr.v4.runtime.ANTLRInputStream;
// import org.antlr.v4.runtime.BailErrorStrategy;
import org.antlr.v4.runtime.BaseErrorListener;
import org.antlr.v4.runtime.RecognitionException;
import org.antlr.v4.runtime.Recognizer;
import org.antlr.v4.runtime.misc.ParseCancellationException;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.CharStreams;
import org.antlr.v4.runtime.CommonTokenStream;
import org.antlr.v4.runtime.CharStream;
import java.util.Date;

public class Ucs2 {
    ShExDocParser p;
    public ShExDocParser.ShExDocContext parseString(String input) throws ParseCancellationException {
        CharStream stream1 = CharStreams.fromString(input);
        String t = ""//"_:AZazÀÖØöø˿ͰͽͿ῿‌‍⁰↏Ⰰ⿯、퟿豈﷏ﷰ�𐀀󯿽 {}";
+ "<http://a.example/S1> {\n"
+ "   <http://a.example/p1> @_:AZazÀÖØöø˿ͰͽͿ῿‌‍⁰↏Ⰰ⿯、퟿豈﷏ﷰ�𐀀󯿽\n"
+ "}\n"
+ "\n"
+ "_:AZazÀÖØöø˿ͰͽͿ῿‌‍⁰↏Ⰰ⿯、퟿豈﷏ﷰ�𐀀󯿽 {\n"
+ "   <http://a.example/p2> .\n"
+ "}\n"
            ;
        ANTLRInputStream stream2 = new ANTLRInputStream(t);
        ShExDocLexer lexer = new ShExDocLexer(stream1);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        ShExDocParser parser = new ShExDocParser(tokens);
        // parser.setErrorHandler(new BailErrorStrategy());
        lexer.addErrorListener(ThrowingErrorListener.INSTANCE);
        parser.addErrorListener(ThrowingErrorListener.INSTANCE);
        // lexer.removeErrorListeners();
        // parser.removeErrorListeners(); // not tested
        // System.err.println(new Date());
        return parser.shExDoc();
    }

    static CharStream forceStream (CharStream input) {
        String t = ""//"_:AZazÀÖØöø˿ͰͽͿ῿‌‍⁰↏Ⰰ⿯、퟿豈﷏ﷰ�𐀀󯿽 {}";
+ "<http://a.example/S1> {\n"
+ "   <http://a.example/p1> @_:AZazÀÖØöø˿ͰͽͿ῿‌‍⁰↏Ⰰ⿯、퟿豈﷏ﷰ�𐀀󯿽\n"
+ "}\n"
+ "\n"
+ "_:AZazÀÖØöø˿ͰͽͿ῿‌‍⁰↏Ⰰ⿯、퟿豈﷏ﷰ�𐀀󯿽 {\n"
+ "   <http://a.example/p2> .\n"
+ "}\n"
            ;
        return CharStreams.fromString(t);
    }
}
